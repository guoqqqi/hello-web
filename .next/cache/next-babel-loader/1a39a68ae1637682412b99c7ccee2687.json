{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/guoqi/workspace/hello-web-/views/Post/Post.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport matter from \"gray-matter\";\nimport ReactMarkdown from \"react-markdown\";\n\nvar Page = function Page(_ref) {\n  var content = _ref.content,\n      _ref$data = _ref.data,\n      data = _ref$data === void 0 ? {} : _ref$data;\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, \"This is my article !\"), __jsx(\"article\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, __jsx(ReactMarkdown, {\n    escapeHtml: true,\n    source: content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  })));\n};\n\n_c = Page;\n\nPage.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var _context$query, slug, category, _ref3, _ref3$lng, lng, fileData, _matter, data, content;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // 1. 获取 Slug\n            _context$query = context.query, slug = _context$query.slug, category = _context$query.category; // 2. 获取语言\n\n            _ref3 = context.req || {}, _ref3$lng = _ref3.lng, lng = _ref3$lng === void 0 ? \"zh-CN\" : _ref3$lng; // 3. markdown to json \n\n            _context.prev = 2;\n            _context.next = 5;\n            return import(\"../../_posts/\".concat(category, \"/\").concat(lng, \"/\").concat(slug, \".md\"));\n\n          case 5:\n            fileData = _context.sent;\n            _matter = matter(fileData[\"default\"]), data = _matter.data, content = _matter.content;\n            return _context.abrupt(\"return\", {\n              namespacesRequired: [\"common\"],\n              data: data,\n              content: content\n            });\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](2);\n            return _context.abrupt(\"return\", {\n              namespacesRequired: [\"common\"],\n              content: undefined\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 10]]);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["/Users/guoqi/workspace/hello-web-/views/Post/Post.tsx"],"names":["React","matter","ReactMarkdown","Page","content","data","getInitialProps","context","query","slug","category","req","lng","fileData","namespacesRequired","undefined"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;AAUA,IAAMC,IAA0B,GAAG,SAA7BA,IAA6B,OAA4B;AAAA,MAAzBC,OAAyB,QAAzBA,OAAyB;AAAA,uBAAhBC,IAAgB;AAAA,MAAhBA,IAAgB,0BAAT,EAAS;AAC7D,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AACE,IAAA,UAAU,EAAE,IADd;AAEE,IAAA,MAAM,EAAED,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF;AAWD,CAZD;;KAAMD,I;;AAcNA,IAAI,CAACG,eAAL;AAAA,uEAAuB,iBAAOC,OAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACrB;AADqB,6BAEMA,OAAO,CAACC,KAFd,EAEbC,IAFa,kBAEbA,IAFa,EAEPC,QAFO,kBAEPA,QAFO,EAIrB;;AAJqB,oBAKGH,OAAO,CAACI,GAAR,IAAsB,EALzB,oBAKdC,GALc,EAKdA,GALc,0BAKR,OALQ,cAOrB;;AAPqB;AAAA;AAAA,mBASI,8BAAuBF,QAAvB,cAAmCE,GAAnC,cAA0CH,IAA1C,SATJ;;AAAA;AASbI,YAAAA,QATa;AAAA,sBAUMZ,MAAM,CAACY,QAAQ,WAAT,CAVZ,EAUXR,IAVW,WAUXA,IAVW,EAULD,OAVK,WAULA,OAVK;AAAA,6CAWZ;AACLU,cAAAA,kBAAkB,EAAE,CAAC,QAAD,CADf;AAELT,cAAAA,IAAI,EAAJA,IAFK;AAGLD,cAAAA,OAAO,EAAPA;AAHK,aAXY;;AAAA;AAAA;AAAA;AAAA,6CAiBZ;AACLU,cAAAA,kBAAkB,EAAE,CAAC,QAAD,CADf;AAELV,cAAAA,OAAO,EAAEW;AAFJ,aAjBY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAwBA,eAAeZ,IAAf","sourcesContent":["import React from \"react\";\nimport { NextPage } from \"next\";\nimport matter from \"gray-matter\";\nimport ReactMarkdown from \"react-markdown\";\n\ntype Props = {\n  content: string;\n  data: {\n    title: string;\n    data: Date;\n  };\n};\n\nconst Page: NextPage<Props, any> = ({ content, data = {} }) => {\n  return (\n    <>\n      <div>This is my article !</div>\n      <article>\n        <ReactMarkdown \n          escapeHtml={true}\n          source={content}\n        />\n      </article>\n    </>\n  );\n};\n\nPage.getInitialProps = async (context) => {\n  // 1. 获取 Slug\n  const { slug, category } = context.query;\n\n  // 2. 获取语言\n  const {lng = \"zh-CN\" } =context.req as any || {};\n\n  // 3. markdown to json \n  try {\n    const fileData = await import(`../../_posts/${category}/${lng}/${slug}.md`);\n    const { data, content} = matter(fileData.default);\n    return {\n      namespacesRequired: [\"common\"],\n      data,\n      content,\n    };\n  }catch (error) {\n    return {\n      namespacesRequired: [\"common\"],\n      content: undefined,\n    };\n  }\n};\n\nexport default Page as any;"]},"metadata":{},"sourceType":"module"}