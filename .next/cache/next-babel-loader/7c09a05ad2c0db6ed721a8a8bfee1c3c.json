{"ast":null,"code":"var _jsxFileName = \"/Users/guoqi/workspace/hello-web-/component/BoilingVerdict/Boil.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\n\nconst Boil = () => {\n  const BoilingVerdict = props => {\n    if (props.celsius >= 100) {\n      return __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 14\n        }\n      }, \"The water would boil.\");\n    }\n\n    return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 12\n      }\n    }, \"The water would not boil.\");\n  };\n\n  class Calculator extends React.Component {\n    constructor(props) {\n      super(props);\n      this.handleChange = this.handleChange.bind(this);\n      this.state = {\n        temperature: ''\n      };\n    }\n\n    handleChange(e) {\n      this.setState({\n        temperature: e.target.value\n      });\n    }\n\n    render() {\n      const temperature = this.state.temperature;\n      return __jsx(\"fieldset\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }, __jsx(\"legend\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }\n      }, \"Enter temperature in Celsius:\"), __jsx(\"input\", {\n        value: temperature,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }\n      }), __jsx(BoilingVerdict, {\n        celsius: parseFloat(temperature),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      }));\n    }\n\n  }\n\n  ;\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"this is a Boil component.\"));\n};\n\nBoil.getInitialProps = async () => {\n  return {};\n};\n\nexport default Boil;","map":{"version":3,"sources":["/Users/guoqi/workspace/hello-web-/component/BoilingVerdict/Boil.tsx"],"names":["React","Boil","BoilingVerdict","props","celsius","Calculator","Component","constructor","handleChange","bind","state","temperature","e","setState","target","value","render","parseFloat","getInitialProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAKA,MAAMC,IAA0B,GAAG,MAAM;AACvC,QAAMC,cAAc,GAAIC,KAAD,IAAW;AAChC,QAAIA,KAAK,CAACC,OAAN,IAAiB,GAArB,EAA0B;AACxB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAP;AACD;;AACD,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAP;AACD,GALD;;AAMA,QAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAyC;AACvCC,IAAAA,WAAW,CAACJ,KAAD,EAAQ;AACjB,YAAMA,KAAN;AACA,WAAKK,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,WAAKC,KAAL,GAAa;AAAEC,QAAAA,WAAW,EAAE;AAAf,OAAb;AACD;;AAEDH,IAAAA,YAAY,CAACI,CAAD,EAAI;AACd,WAAKC,QAAL,CAAc;AAAEF,QAAAA,WAAW,EAAEC,CAAC,CAACE,MAAF,CAASC;AAAxB,OAAd;AACD;;AAEDC,IAAAA,MAAM,GAAG;AACP,YAAML,WAAW,GAAG,KAAKD,KAAL,CAAWC,WAA/B;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADF,EAEE;AACE,QAAA,KAAK,EAAEA,WADT;AAEE,QAAA,QAAQ,EAAE,KAAKH,YAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAKE,MAAC,cAAD;AACE,QAAA,OAAO,EAAES,UAAU,CAACN,WAAD,CADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF;AAUD;;AAvBsC;;AAwBxC;AACD,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,CADF;AAKD,CArCD;;AAuCAV,IAAI,CAACiB,eAAL,GAAuB,YAAY;AACjC,SAAO,EAAP;AACD,CAFD;;AAIA,eAAejB,IAAf","sourcesContent":["import React from \"react\";\nimport { NextPage } from \"next\";\n\ntype Props = {};\n\nconst Boil: NextPage<Props, any> = () => {\n  const BoilingVerdict = (props) => {\n    if (props.celsius >= 100) {\n      return <p>The water would boil.</p>;\n    }\n    return <p>The water would not boil.</p>;\n  }\n  class Calculator extends React.Component {\n    constructor(props) {\n      super(props);\n      this.handleChange = this.handleChange.bind(this);\n      this.state = { temperature: '' };\n    }\n\n    handleChange(e) {\n      this.setState({ temperature: e.target.value });\n    }\n\n    render() {\n      const temperature = this.state.temperature;\n      return (\n        <fieldset>\n          <legend>Enter temperature in Celsius:</legend>\n          <input\n            value={temperature}\n            onChange={this.handleChange} />\n          <BoilingVerdict\n            celsius={parseFloat(temperature)} />\n        </fieldset>\n      );\n    }\n  };\n  return (\n    <>\n      <div>this is a Boil component.</div>\n    </>\n  );\n};\n\nBoil.getInitialProps = async () => {\n  return {};\n};\n\nexport default Boil;"]},"metadata":{},"sourceType":"module"}