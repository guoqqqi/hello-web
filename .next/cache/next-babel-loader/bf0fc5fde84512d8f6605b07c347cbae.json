{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport matter from \"gray-matter\";\nimport ReactMarkdown from \"react-markdown\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport gfm from 'remark-gfm';\n\nconst CodeBlock = ({\n  language,\n  value\n}) => {\n  return __jsx(SyntaxHighlighter, {\n    showLineNumbers: true,\n    language: language\n  }, value);\n};\n\nconst Page = ({\n  content,\n  data = {}\n}) => {\n  const url = window.location.href;\n  const loc = url.substring(url.lastIndexOf('/') + 1, url.length);\n  console.log(url);\n  return __jsx(React.Fragment, null, __jsx(\"div\", null, \"This is my article !\"), __jsx(\"div\", null, content === undefined && __jsx(\"h2\", null, \"\\u9519\\u8BEF\\uFF0C\\u672A\\u627E\\u5230\\uFF01\"), content !== undefined && __jsx(\"div\", null, __jsx(\"h1\", null, data.title), __jsx(\"span\", null, new Date(data.date).toLocaleDateString()), __jsx(\"article\", null, __jsx(ReactMarkdown, {\n    escapeHtml: true,\n    source: content,\n    plugins: [gfm],\n    renderers: {\n      code: CodeBlock\n    }\n  })))));\n};\n\nPage.getInitialProps = async context => {\n  // 1. 获取 Slug\n  const {\n    slug,\n    category\n  } = context.query; // 2. 获取语言\n\n  const {\n    lng = \"zh-CN\"\n  } = context.req || {}; // 3. markdown to json \n\n  try {\n    const fileData = await import(`../../_posts/${category}/${lng}/${slug}.md`);\n    const {\n      data,\n      content\n    } = matter(fileData.default);\n    return {\n      namespacesRequired: [\"common\"],\n      data,\n      content\n    };\n  } catch (error) {\n    return {\n      namespacesRequired: [\"common\"],\n      content: undefined\n    };\n  }\n};\n\nexport default Page;","map":null,"metadata":{},"sourceType":"module"}