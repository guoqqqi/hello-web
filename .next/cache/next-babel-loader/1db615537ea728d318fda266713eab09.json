{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/guoqi/workspace/hello-web-/views/Post/Post.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport matter from \"gray-matter\";\nimport ReactMarkdown from \"react-markdown\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport gfm from 'remark-gfm';\n\nvar CodeBlock = function CodeBlock(_ref) {\n  var language = _ref.language,\n      value = _ref.value;\n  return __jsx(SyntaxHighlighter, {\n    showLineNumbers: true,\n    language: language,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, value);\n};\n\n_c = CodeBlock;\n\nvar Page = function Page(_ref2) {\n  var content = _ref2.content,\n      _ref2$data = _ref2.data,\n      data = _ref2$data === void 0 ? {} : _ref2$data;\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"This is my article !\"), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, content === undefined && __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, \"\\u9519\\u8BEF\\uFF0C\\u672A\\u627E\\u5230\\uFF01\"), content !== undefined && __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, data.title), __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, new Date(data.date).toLocaleDateString()), __jsx(\"article\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, __jsx(ReactMarkdown, {\n    escapeHtml: true,\n    source: content,\n    plugins: [gfm],\n    renderers: {\n      code: CodeBlock\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  })))));\n};\n\n_c2 = Page;\n\nPage.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var _context$query, slug, category, _ref4, _ref4$lng, lng, fs, remark, oembed, fileData, _matter, data, content;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // 1. 获取 Slug\n            _context$query = context.query, slug = _context$query.slug, category = _context$query.category; // 2. 获取语言\n\n            _ref4 = context.req || {}, _ref4$lng = _ref4.lng, lng = _ref4$lng === void 0 ? \"zh-CN\" : _ref4$lng;\n            fs = require('fs');\n            remark = require('remark');\n            oembed = require('@agentofuser/remark-oembed');\n            remark().use(oembed).process(fs.readFileSync('form-api7-trial.md'), function (err, file) {\n              if (err) throw err;\n              console.log(String(file));\n            }); // 3. markdown to json \n\n            _context.prev = 6;\n            _context.next = 9;\n            return import(\"../../_posts/\".concat(category, \"/\").concat(lng, \"/\").concat(slug, \".md\"));\n\n          case 9:\n            fileData = _context.sent;\n            _matter = matter(fileData[\"default\"]), data = _matter.data, content = _matter.content;\n            console.log(content);\n            return _context.abrupt(\"return\", {\n              namespacesRequired: [\"common\"],\n              data: data,\n              content: content\n            });\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](6);\n            return _context.abrupt(\"return\", {\n              namespacesRequired: [\"common\"],\n              content: undefined\n            });\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[6, 15]]);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default Page;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CodeBlock\");\n$RefreshReg$(_c2, \"Page\");","map":{"version":3,"sources":["/Users/guoqi/workspace/hello-web-/views/Post/Post.tsx"],"names":["React","matter","ReactMarkdown","Prism","SyntaxHighlighter","gfm","CodeBlock","language","value","Page","content","data","undefined","title","Date","date","toLocaleDateString","code","getInitialProps","context","query","slug","category","req","lng","fs","require","remark","oembed","use","process","readFileSync","err","file","console","log","String","fileData","namespacesRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { NextPage } from \"next\";\nimport matter from \"gray-matter\";\nimport ReactMarkdown from \"react-markdown\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport gfm from 'remark-gfm';\n\ntype Props = {\n  content: string;\n  data: {\n    title: string;\n    date: Date;\n  };\n};\n\nconst CodeBlock = ({ language, value }) => {\n  return (\n    <SyntaxHighlighter showLineNumbers={true} language={language}>\n      {value}\n    </SyntaxHighlighter>\n  );\n};\n\nconst Page: NextPage<Props, any> = ({ content, data = {} }) => {\n  return (\n    <>\n      <div>This is my article !</div>\n      <div>\n        {content === undefined && (\n          <h2>错误，未找到！</h2>\n        )}\n        {content !== undefined && (\n          <div>\n            <h1>{data.title}</h1>\n            <span>{new Date(data.date).toLocaleDateString()}\n            </span>\n            <article>\n              <ReactMarkdown\n                escapeHtml={true}\n                source={content}\n                plugins={[gfm]}\n                renderers={{ code: CodeBlock }}\n              />\n            </article>\n          </div>\n        )}\n      </div>\n\n    </>\n  );\n};\n\nPage.getInitialProps = async (context) => {\n  // 1. 获取 Slug\n  const { slug, category } = context.query;\n\n  // 2. 获取语言\n  const { lng = \"zh-CN\" } = context.req as any || {};\n\n  var fs = require('fs')\n  var remark = require('remark')\n  var oembed = require('@agentofuser/remark-oembed')\n\n  remark()\n  .use(oembed)\n  .process(fs.readFileSync('form-api7-trial.md'), function(err, file) {\n    if (err) throw err\n    console.log(String(file))\n  })\n\n  // 3. markdown to json \n  try {\n    const fileData = await import(`../../_posts/${category}/${lng}/${slug}.md`);\n    const { data, content } = matter(fileData.default);\n    console.log(content)\n    return {\n      namespacesRequired: [\"common\"],\n      data,\n      content,\n    };\n  } catch (error) {\n    return {\n      namespacesRequired: [\"common\"],\n      content: undefined,\n    };\n  }\n};\n\nexport default Page as any;"]},"metadata":{},"sourceType":"module"}