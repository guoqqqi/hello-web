{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/guoqi/workspace/hello-web-/component/BoilingVerdict/Boil.tsx\";\n\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\n\nvar Boil = function Boil() {\n  var BoilingVerdict = function BoilingVerdict(props) {\n    if (props.celsius >= 100) {\n      return __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 14\n        }\n      }, \"The water would boil.\");\n    }\n\n    return __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 12\n      }\n    }, \"The water would not boil.\");\n  };\n\n  var Calculator = /*#__PURE__*/function (_React$Component) {\n    _inherits(Calculator, _React$Component);\n\n    var _super = _createSuper(Calculator);\n\n    function Calculator(props) {\n      var _this2;\n\n      _classCallCheck(this, Calculator);\n\n      _this2 = _super.call(this, props);\n      _this2.handleChange = _this2.handleChange.bind(_assertThisInitialized(_this2));\n      _this2.state = {\n        temperature: ''\n      };\n      return _this2;\n    }\n\n    _createClass(Calculator, [{\n      key: \"handleChange\",\n      value: function handleChange(e) {\n        this.setState({\n          temperature: e.target.value\n        });\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var temperature = this.state.temperature;\n        return __jsx(\"fieldset\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 9\n          }\n        }, __jsx(\"legend\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 11\n          }\n        }, \"Enter temperature in Celsius:\"), __jsx(\"input\", {\n          value: temperature,\n          onChange: this.handleChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 11\n          }\n        }), __jsx(BoilingVerdict, {\n          celsius: parseFloat(temperature),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 11\n          }\n        }));\n      }\n    }]);\n\n    return Calculator;\n  }(React.Component);\n\n  ;\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"this is a Boil component.\"));\n};\n\n_c = Boil;\nBoil.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", {});\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Boil;\n\nvar _c;\n\n$RefreshReg$(_c, \"Boil\");","map":{"version":3,"sources":["/Users/guoqi/workspace/hello-web-/component/BoilingVerdict/Boil.tsx"],"names":["React","Boil","BoilingVerdict","props","celsius","Calculator","handleChange","bind","state","temperature","e","setState","target","value","parseFloat","Component","getInitialProps"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAKA,IAAMC,IAA0B,GAAG,SAA7BA,IAA6B,GAAM;AACvC,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAChC,QAAIA,KAAK,CAACC,OAAN,IAAiB,GAArB,EAA0B;AACxB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAP;AACD;;AACD,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAP;AACD,GALD;;AADuC,MAOjCC,UAPiC;AAAA;;AAAA;;AAQrC,wBAAYF,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iCAAMA,KAAN;AACA,aAAKG,YAAL,GAAoB,OAAKA,YAAL,CAAkBC,IAAlB,gCAApB;AACA,aAAKC,KAAL,GAAa;AAAEC,QAAAA,WAAW,EAAE;AAAf,OAAb;AAHiB;AAIlB;;AAZoC;AAAA;AAAA,mCAcxBC,CAdwB,EAcrB;AACd,aAAKC,QAAL,CAAc;AAAEF,UAAAA,WAAW,EAAEC,CAAC,CAACE,MAAF,CAASC;AAAxB,SAAd;AACD;AAhBoC;AAAA;AAAA,+BAkB5B;AACP,YAAMJ,WAAW,GAAG,KAAKD,KAAL,CAAWC,WAA/B;AACA,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADF,EAEE;AACE,UAAA,KAAK,EAAEA,WADT;AAEE,UAAA,QAAQ,EAAE,KAAKH,YAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAKE,MAAC,cAAD;AACE,UAAA,OAAO,EAAEQ,UAAU,CAACL,WAAD,CADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALF,CADF;AAUD;AA9BoC;;AAAA;AAAA,IAOdT,KAAK,CAACe,SAPQ;;AA+BtC;AACD,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,CADF;AAKD,CArCD;;KAAMd,I;AAuCNA,IAAI,CAACe,eAAL,yEAAuB;AAAA;AAAA;AAAA;AAAA;AAAA,2CACd,EADc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;AAIA,eAAef,IAAf","sourcesContent":["import React from \"react\";\nimport { NextPage } from \"next\";\n\ntype Props = {};\n\nconst Boil: NextPage<Props, any> = () => {\n  const BoilingVerdict = (props) => {\n    if (props.celsius >= 100) {\n      return <p>The water would boil.</p>;\n    }\n    return <p>The water would not boil.</p>;\n  }\n  class Calculator extends React.Component {\n    constructor(props) {\n      super(props);\n      this.handleChange = this.handleChange.bind(this);\n      this.state = { temperature: '' };\n    }\n\n    handleChange(e) {\n      this.setState({ temperature: e.target.value });\n    }\n\n    render() {\n      const temperature = this.state.temperature;\n      return (\n        <fieldset>\n          <legend>Enter temperature in Celsius:</legend>\n          <input\n            value={temperature}\n            onChange={this.handleChange} />\n          <BoilingVerdict\n            celsius={parseFloat(temperature)} />\n        </fieldset>\n      );\n    }\n  };\n  return (\n    <>\n      <div>this is a Boil component.</div>\n    </>\n  );\n};\n\nBoil.getInitialProps = async () => {\n  return {};\n};\n\nexport default Boil;"]},"metadata":{},"sourceType":"module"}